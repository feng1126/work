#!/usr/bin/env python
import rospy
import cv2
import numpy as np
from sensor_msgs.msg import NavSatFix
import argparse
import utm

class image_converter:
    def __init__(self, topic):
        self.topic = topic
        self.odom_sub = rospy.Subscriber(self.topic, NavSatFix, self.callback)
        fname='gps.txt'
        self.fobj=open(fname,'w')    
    
    def callback(self, msg):
        #convert image to opencv
        try:
            timestr = "%.6f" % msg.header.stamp.to_sec()
            longitude = "%.10f" % msg.longitude
            latitude = "%.10f" % msg.latitude
            altitude = "%.10f" % msg.altitude
            utm_xyz = utm.from_latlon(float(latitude), float(longitude))
            self.fobj.write(timestr + ' ' + str("%.10f" % utm_xyz[0]) + ' ' + str( "%.10f" % utm_xyz[1])+' ' + altitude+' 0 0 0 1'+'\n')
            self.fobj.flush() 

        except :
            print ("Could not  ros message to  word: ")
            return

    def _del_(self): 
        self.fobj.close() 
        print ("save odom")


if __name__ == "__main__":    
    parser = argparse.ArgumentParser(description='Validate the intrinsics of a camera.')
    parser.add_argument('--topic', nargs='+', dest='topics', help='camera topic', required=True)
    parsed = parser.parse_args()

    for topic in parsed.topics:
        camval = image_converter(topic) 
        print(topic)
    
    rospy.init_node('rosodom', anonymous=True)
    try:
        rospy.spin()
    except KeyboardInterrupt:
        del camval
        print ("Shutting down")
